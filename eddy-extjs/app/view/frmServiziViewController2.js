/*
 * File: app/view/frmServiziViewController2.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rai.view.frmServiziViewController2', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.frmprofili',

    onAddProfile: function(button, e, eOpts) {
        var firstName = Ext.getCmp('firstName').getValue(),
            lastName = Ext.getCmp('lastName').getValue(),
            role = Ext.getCmp('role').getValue(),
            divisione = Ext.getCmp('divisione').getValue(),
            userName = Ext.getCmp('userName').getValue(),
            pwd = Ext.getCmp('pwd').getValue(),
            pwdRipetuta = Ext.getCmp('pwdRipetuta').getValue(),
            email = Ext.getCmp('eMail').getValue(),
            superiore = Ext.getCmp('superiore').getValue();

        if (userName === undefined || userName == "" ){
            Ext.Msg.show({
                title:'Errore',
                msg: "L'username non può essere vuoto!",
                buttons: Ext.Msg.Ok,
            });
            return;
        }

        if (pwd === undefined || pwd == "" ){
            Ext.Msg.show({
                title:'Errore',
                msg: "La password non può essere vuota!",
                buttons: Ext.Msg.Ok,
            });
            return;
        }

        if (pwd !== pwdRipetuta){
            Ext.Msg.show({
                title:'Errore',
                msg: "Le password non coincidono!",
                buttons: Ext.Msg.Ok,
            });
            return;
        }


        if (role === undefined || role == "" ){
            Ext.Msg.show({
                title:'Errore',
                msg: "L'username non può essere vuoto!",
                buttons: Ext.Msg.Ok,
            });
            return;
        }


        var store = Ext.StoreManager.lookup('storeUtenti');
        var emptyApp = new Rai.model.utenti();
        emptyApp.set("userName",userName);
        emptyApp.set("password",pwd);
        emptyApp.set("firstName",firstName);
        emptyApp.set("lastName",lastName);
        emptyApp.set("email",email);
        emptyApp.set("divisione",divisione);
        emptyApp.set("roles",role);
        emptyApp.set("superiore",superiore);
        store.add(emptyApp);
        store.on('write', function() { store.load();});

        Ext.getCmp('firstName').setValue(null);
        Ext.getCmp('lastName').setValue(null);
        Ext.getCmp('role').setValue(null);
        Ext.getCmp('divisione').setValue(null);
        Ext.getCmp('userName').setValue(null);
        Ext.getCmp('pwd').setValue(null);
        Ext.getCmp('pwdRipetuta').setValue(null);
        Ext.getCmp('eMail').setValue(null);
        Ext.getCmp('superiore').setValue(null);
    },

    onButtonClick: function(button, e, eOpts) {
        var selection = Ext.getCmp('utentiGrid').getSelectionModel().getSelection();
        var store = Ext.StoreManager.lookup('storeUtenti');
        store.remove(selection);
    }

});
