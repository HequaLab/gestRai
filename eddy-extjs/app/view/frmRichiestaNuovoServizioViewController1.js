/*
 * File: app/view/frmRichiestaNuovoServizioViewController1.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rai.view.frmRichiestaNuovoServizioViewController1', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.frmrichiestaservizioadmin',

    onFilialeSelect: function(combo, record, eOpts) {
        var divisione = record.get('nome');

        var store = Ext.StoreManager.lookup('storeLotti');
        store.filter({
            property: "divisione",
            value: divisione,
            operator: "streq"
        });
        store.load();

        store = Ext.StoreManager.lookup('storeProduzioni');
        store.filter({
            property: "divisione",
            value: divisione ,
            operator: "streq"
        });
        store.load();

        store = Ext.StoreManager.lookup('storeMatricole');
        store.filter({
            property: "divisione",
            value: divisione ,
            operator: "streq"
        });
        store.load();

        store = Ext.StoreManager.lookup('storeLuoghi');
        store.filter({
            property: "divisione",
            value: divisione ,
            operator: "streq"
        });
        store.load();

    },

    onServizioCombo1Select: function(combo, record, eOpts) {
        var store = Ext.StoreManager.lookup('storeServizi');
        store.clearFilter();
        var tipologia = Ext.getCmp('comboTipologia1').getValue();
        store.filter({
            property: "tipologia",
            value: tipologia ,
            operator: "streq"
        });


        Ext.getCmp('oreRichiesta').enable();

        // Disabilitare numero ore per servizi canone e modulo
        if (tipologia == 'Canone' || tipologia == "Modulo"){
            Ext.getCmp('oreRichiesta').disable();
        }

    },

    onServizioComboSelect: function(combo, record, eOpts) {
        Ext.getCmp('codiciCombo1').setValue(record);
    },

    onRichiediServizio: function(button, e, eOpts) {
        Ext.Msg.show({
            title:'Richiesta servizio',
            msg: 'Stai per richiedere un servizio, vuoi continuae?',
            buttons: Ext.Msg.YESNO,
            buttonText: {
                no:'No',
                yes:'Si'
            },
            fn: function(btn){
                if (btn=='yes'){

                    var servizio = Ext.getCmp('servizioCombo1').getValue(),
                        programmazione = Ext.getCmp('programmazioneCombo1').getValue(),
                        data = Ext.getCmp('dataRichiesta1').getValue(),
                        ora = Ext.getCmp('oraRichiesta1').getRawValue(),
                        ore = Ext.getCmp('oreRichiesta1').getValue(),
                        dataFine = Ext.getCmp('dataFine1').getValue(),
                        note = Ext.getCmp('noteRichiesta1').getValue(),
                        filiale = USER.divisione,
                        stato = "Nessuno",
                        tipologia = Ext.getCmp('comboTipologia1').getValue(),
                        lotto = Ext.getCmp('lotto1').getValue(),
                        dataFine = Ext.getCmp('dataFine1').getValue(),
                        matricola = Ext.getCmp('matricola1').getValue(),
                        produzione = Ext.getCmp('produzione1').getValue(),
                        luogo = Ext.getCmp('luogo1').getValue(),
                        divisione = Ext.getCmp('filiale').getValue();

                    if (servizio === undefined || servizio === "")
                    {    Ext.Msg.show({
                        title:'Errore',
                        msg: "Non hai selezionato il servizio",
                        buttons: Ext.Msg.Ok,
                    });
                    return;
                }

                if (programmazione === undefined || programmazione === "")
                {    Ext.Msg.show({
                    title:'Errore',
                    msg: "Non hai selezionato la programmazione!",
                    buttons: Ext.Msg.Ok,
                });
                return;
            }

            if ((data === undefined || data === null))
            {    Ext.Msg.show({
                title:'Errore',
                msg: "Non hai selezionato una data!",
                buttons: Ext.Msg.Ok,
            });
            return;
        }

        var store = Ext.StoreManager.lookup('storeRichiesteServizi');
        var emptyApp = new Rai.model.richiestaServizio();
        emptyApp.set('nome',servizio);
        emptyApp.set('divisione',filiale);
        emptyApp.set('ora',ora);
        emptyApp.set('data',data);
        emptyApp.set('programmazione',programmazione);
        emptyApp.set('ore',ore);
        emptyApp.set('note',note);
        emptyApp.set('stato',stato);
        emptyApp.set('dataFine',dataFine);
        emptyApp.set('tipologia',tipologia);
        emptyApp.set('lotto',lotto);
        emptyApp.set('matricola',matricola);
        emptyApp.set('produzione',produzione);
        emptyApp.set('luogo',luogo);
        emptyApp.set('divisione',divisione);
        emptyApp.set('operatore','admin');
        store.add(emptyApp);
        var self = this;
        store.on('write', function() {
            store.load();
        });


        Ext.getCmp('comboTipologia1').setValue('Canone');
        var store = Ext.StoreManager.lookup('storeServizi');
        store.clearFilter();
        store.filter({
            property: "tipologia",
            value: 'Canone' ,
            operator: "streq"
        });


        Ext.getCmp('oreRichiesta1').disable();
        Ext.getCmp('servizioCombo1').setValue(null);
        Ext.getCmp('programmazioneCombo1').setValue(null);
        Ext.getCmp('dataRichiesta1').setValue(null);
        Ext.getCmp('oraRichiesta1').setValue(null);
        Ext.getCmp('oreRichiesta1').setValue(null);
        Ext.getCmp('dataFine1').setValue(null);
        Ext.getCmp('noteRichiesta1').setValue(null);
        Ext.getCmp('comboTipologia1').setValue(null);
        Ext.getCmp('lotto1').setValue(null);
        Ext.getCmp('dataFine1').setValue(null);
        Ext.getCmp('codiciCombo1').setValue(null);
        Ext.getCmp('matricola1').setValue(null);
        Ext.getCmp('luogo1').setValue(null);
        Ext.getCmp('produzione1').setValue(null);




    }
},
animEl: 'elId'
});



    },

    onClear: function(button, e, eOpts) {
        Ext.getCmp('oreRichiesta1').disable();
        Ext.getCmp('servizioCombo1').setValue(null);
        Ext.getCmp('programmazioneCombo1').setValue(null);
        Ext.getCmp('dataRichiesta1').setValue(null);
        Ext.getCmp('oraRichiesta1').setValue(null);
        Ext.getCmp('oreRichiesta1').setValue(null);
        Ext.getCmp('dataFine1').setValue(null);
        Ext.getCmp('noteRichiesta1').setValue(null);
        Ext.getCmp('comboTipologia1').setValue(null);
        Ext.getCmp('lotto1').setValue(null);
        Ext.getCmp('dataFine1').setValue(null);
        Ext.getCmp('codiciCombo1').setValue(null);
        Ext.getCmp('matricola1').setValue(null);
        Ext.getCmp('luogo1').setValue(null);
        Ext.getCmp('produzione1').setValue(null);
    },

    onFrmrichiestanuovoservizioAfterRender: function(component, eOpts) {
        /*
        var store = Ext.StoreManager.lookup('storeRichiesteServizi');
        store.filter(
        {
        property: "stato",
        value: "Approvato",
        operator: "streq"
        });
        store.load();
        */
    }

});
