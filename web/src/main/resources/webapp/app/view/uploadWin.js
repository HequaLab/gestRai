/*
 * File: app/view/uploadWin.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rai.view.uploadWin', {
    extend: 'Ext.window.Window',
    alias: 'widget.uploadWin',

    requires: [
        'Rai.view.uploadWinViewModel',
        'Rai.view.uploadWinViewController',
        'Ext.button.Button',
        'Ext.form.field.File'
    ],

    config: {
        storeLocale: '{descr:"ok"};',
        recordRicevuto: ''
    },

    controller: 'uploadwin',
    viewModel: {
        type: 'uploadwin'
    },
    height: 134,
    id: 'uploadWin',
    width: 317,
    layout: 'absolute',
    bodyStyle: 'color:white;',
    title: 'Selezione report',
    titleAlign: 'center',

    items: [
        {
            xtype: 'button',
            handler: function(button, e) {
                var filefield = Ext.getCmp('fileUpload');
                var file = filefield.getEl().down('input[type=file]').dom.files[0];
                var reader = new FileReader();
                var recordRicevuto = this.up('window').recordRicevuto;

                reader.onload = (function(theFile) {
                    return function(e) {
                        var encodedFile =e.target.result.split(',')[1];
                        Ext.MessageBox.wait('Operazione in corso..');
                        Ext.Ajax.request({
                            url: '/richiestaNuovoServizio/eroga/' + recordRicevuto.get('richiestaNuovoServizioId'),
                            headers: {
                                'Authorization': 'Bearer ' + ACCESS_TOKEN,
                            },
                            method:'POST',
                            jsonData: {data:encodedFile},
                            success: function (response, options) {
                                Ext.StoreManager.lookup('storeRichiesteServizi').load();
                                Ext.MessageBox.updateProgress(1);
                                Ext.MessageBox.hide();
                                Ext.Msg.show({
                                    title:'Richiesta erogata',
                                    msg: "Richiesta erogata.",
                                    buttons: Ext.Msg.Ok,
                                });},
                                failure: function (response, options) {
                                    Ext.MessageBox.updateProgress(1);
                                    Ext.MessageBox.hide();
                                    Ext.Msg.show({
                                        title:'Errore con il server',                    msg: "C'Ã¨ stato un errore durante l'operazione. Errore: " + response.status,
                                        buttons: Ext.Msg.Ok,
                                    });
                                }


                            });

                        };
                    })(file);

                    // start upload
                    reader.readAsDataURL(file);
            },
            x: 30,
            y: 60,
            height: 20,
            width: 260,
            text: 'Procedi'
        },
        {
            xtype: 'filefield',
            x: 20,
            y: 20,
            id: 'fileUpload',
            fieldLabel: 'Selezionare pdf',
            buttonText: '...'
        }
    ],
    listeners: {
        show: 'onUploadWinShow',
        afterrender: 'onUploadWinAfterRender'
    }

});