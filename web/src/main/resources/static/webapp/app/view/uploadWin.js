/*
 * File: app/view/uploadWin.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rai.view.uploadWin', {
    extend: 'Ext.window.Window',
    alias: 'widget.uploadWin',

    requires: [
        'Rai.view.uploadWinViewModel',
        'Rai.view.uploadWinViewController',
        'Ext.form.field.File',
        'Ext.button.Button'
    ],

    controller: 'uploadwin',
    viewModel: {
        type: 'uploadwin'
    },
    height: 123,
    id: 'uploadWin',
    width: 400,
    title: 'Upload file',
    titleAlign: 'center',

    layout: {
        type: 'vbox',
        align: 'center',
        padding: 20
    },
    items: [
        {
            xtype: 'filefield',
            cls: 'upload-icon',
            id: 'inputField',
            fieldLabel: 'Label'
        },
        {
            xtype: 'button',
            handler: function(button, e) {


                var filefield = Ext.getCmp('inputField');
                var file = filefield.getEl().down('input[type=file]').dom.files[0];
                var reader = new FileReader();
                var idRichiesta = this.up('window').idRichiesta;
                reader.onload = (function(theFile) {
                    return function(e) {
                        var encodedFile = Ext.util.base64.encode(e.target.result);

                        Ext.Ajax.request({
                            method : 'POST',
                            url: '/richiestaNuovoServizio/report',
                            headers: {
                                'Authorization': 'Bearer ' + ACCESS_TOKEN,
                                'Content-Type': 'application/json'
                            },
                            jsonData: {
                                id : idRichiesta,
                                data : encodedFile
                            },
                            success: function (response, options) {
                                Ext.Msg.show({
                                    title:'Benvenuto',
                                    msg: "Risultato: " + response.responseText,
                                    buttons: Ext.Msg.Ok,
                                });},
                                failure: function (response, options) { Ext.Msg.show({
                                    title:'Errore con il server',
                                    msg: "Risposta: " + response,
                                    buttons: Ext.Msg.Ok,
                                });
                            }
                        });



                    };
                })(file);
                // start upload
                reader.readAsBinaryString(file);
            },
            width: 275,
            text: 'MyButton'
        }
    ],
    listeners: {
        show: 'onUploadWinShow'
    }

});