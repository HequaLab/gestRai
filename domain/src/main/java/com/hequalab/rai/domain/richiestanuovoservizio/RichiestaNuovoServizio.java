package com.hequalab.rai.domain.richiestanuovoservizio;

import org.joda.time.LocalDate;
import org.joda.time.LocalDateTime;

import com.hequalab.rai.dddd.DeletableAggregate;

/*
 * Class generated by AppWizard
 */

import com.hequalab.rai.domain.richiestanuovoservizio.events.RichiestaNuovoServizioCreated;
import com.hequalab.rai.domain.richiestanuovoservizio.events.RichiestaNuovoServizioDeleted;
import com.hequalab.rai.domain.richiestanuovoservizio.events.RichiestaNuovoServizioUpdated;

public class RichiestaNuovoServizio extends DeletableAggregate<RichiestaNuovoServizio,RichiestaNuovoServizioId,RichiestaNuovoServizioDeleted> {

	private RichiestaNuovoServizio(RichiestaNuovoServizioId id) {
		super(id, RichiestaNuovoServizioDeleted.class);
	}

	public RichiestaNuovoServizio(RichiestaNuovoServizioId id ,LocalDate data,
		LocalDate dataFine,String divisione,String fornitore,String nome,String note,
		String ora,Integer ore,String uorg,String stato,String lotto,String operatore,
		String tipologia,Integer matricola,String produzione,String luogo,LocalDateTime timeStamp,
		String utenteApprovante, Double importo,Double costoTotale, String statoEsportazione,String voce, String luogoId) {
		this(id);
		applyChange(new RichiestaNuovoServizioCreated(id , data, dataFine, divisione, 
			fornitore, nome, note, ora, ore, uorg, stato, lotto, operatore, tipologia,
			matricola, produzione, luogo,timeStamp,utenteApprovante, importo, costoTotale, statoEsportazione,voce, luogoId));
	}
	
	public RichiestaNuovoServizio update( LocalDate data,LocalDate dataFine,String divisione,String fornitore,
		String nome,String note,String ora,Integer ore,String uorg,String stato,String lotto,
		String operatore,String tipologia,Integer matricola,String produzione,String luogo,
		String utenteApprovante,Double importo,Double costoTotale,String statoEsportazione,String voce, String luogoId) {
		applyChange(new RichiestaNuovoServizioUpdated(getId() , data, dataFine, divisione, 
			fornitore, nome, note, ora, ore, uorg, stato, lotto, operatore, tipologia, matricola,
			produzione, luogo, utenteApprovante, importo,costoTotale, statoEsportazione,voce, luogoId));
		return this;
	}

}